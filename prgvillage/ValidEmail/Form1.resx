<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XLly5cuf/9k=
</value>
  </data>
</root>